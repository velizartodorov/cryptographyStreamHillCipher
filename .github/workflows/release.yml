name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

jobs:
  build-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup Visual Studio
      uses: microsoft/setup-vs@v1
      with:
        vs-version: '17.0'
        
    - name: Determine version
      id: version
      run: |
        if "${{ github.event_name }}" == "workflow_dispatch" (
          echo "version=${{ github.event.inputs.version }}" >> $env:GITHUB_OUTPUT
        ) else (
          echo "version=${GITHUB_REF#refs/tags/}" >> $env:GITHUB_OUTPUT
        )
      shell: cmd
        
    - name: Build Release
      run: |
        msbuild StreamHillCipherEncoding.vcxproj /p:Configuration=Release /p:Platform=x64 /verbosity:minimal /p:WarningLevel=0
      shell: cmd
      
    - name: Build Test Suite Release
      run: |
        msbuild TestProject.vcxproj /p:Configuration=Release /p:Platform=x64 /verbosity:minimal /p:WarningLevel=0
      shell: cmd
      
    - name: Run Release Tests
      run: |
        echo "Running tests on release build..."
        x64\Release\TestProject.exe
        if %ERRORLEVEL% neq 0 (
          echo "Release tests failed!"
          exit /b 1
        )
      shell: cmd
      
    - name: Create release package
      run: |
        mkdir release-package
        copy x64\Release\StreamHillCipherEncoding.exe release-package\
        copy x64\Release\TestProject.exe release-package\
        copy README_TESTS.md release-package\
        copy *.h release-package\
        copy *.cpp release-package\
        
        echo "Release package contents:"
        dir release-package /s
      shell: cmd
      
    - name: Create ZIP archive
      run: |
        powershell Compress-Archive -Path release-package\* -DestinationPath StreamHillCipherEncoding-${{ steps.version.outputs.version }}-windows-x64.zip
        echo "Release archive created:"
        dir *.zip
      shell: cmd
      
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ steps.version.outputs.version }}
        path: |
          StreamHillCipherEncoding-${{ steps.version.outputs.version }}-windows-x64.zip
          x64/Release/
        retention-days: 30
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: StreamHillCipherEncoding-${{ steps.version.outputs.version }}-windows-x64.zip
        name: Release ${{ steps.version.outputs.version }}
        body: |
          ## StreamHillCipherEncoding ${{ steps.version.outputs.version }}
          
          ### Changes
          - Automated release build
          - Full test suite validation
          - Windows x64 executable
          
          ### Files
          - `StreamHillCipherEncoding.exe` - Main application
          - `TestProject.exe` - Test suite
          - Source code and headers
          
          ### Testing
          All tests passed successfully in the release build.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
